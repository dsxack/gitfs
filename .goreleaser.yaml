# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines bellow are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    main: ./cmd/gitfs

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

brews:
  - name: gitfs
    url_template: "https://github.com/dsxack/gitfs/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    commit_author:
      name: "Smotrov Dmitriy"
      email: "dsxack@gmail.com"
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    folder: Formula
    homepage: "https://github.com/dsxack/gitfs"
    description: "FUSE filesystem for browsing contents of git repositories revisions"
    license: "MIT"
    test: |
      system "#{bin}/gitfs", "version"
    install: |
      bin.install "{{ .ProjectName }}"
    repository:
      owner: "dsxack"
      name: "homebrew-tap"
      branch: "main"
    custom_block: |
      class MacFuseRequirement < Requirement
        fatal true
    
        satisfy(build_env: false) do
          File.exist?("/usr/local/include/fuse/fuse.h") &&
            !File.symlink?("/usr/local/include/fuse")
        end
    
        def message
          <<~EOS
            macFUSE is required; install it via:
            brew install --cask macfuse
          EOS
        end
      end
    
      depends_on "libfuse" if OS.linux?
      depends_on MacFuseRequirement if OS.mac?